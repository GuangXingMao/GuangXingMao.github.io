<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shinx&#39;blog</title>
  <subtitle>人生如长跑，成长需进阶</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-09T14:56:20.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>GuangXing Mao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>android控件自动化埋点统计</title>
    <link href="http://yoursite.com/2017/05/09/android%E6%8E%A7%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E5%9F%8B%E7%82%B9%E7%BB%9F%E8%AE%A1/"/>
    <id>http://yoursite.com/2017/05/09/android控件自动化埋点统计/</id>
    <published>2017-05-09T05:24:19.000Z</published>
    <updated>2017-05-09T14:56:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　想到应用统计，平时我们使用的一般都是第三方的，比如百度统计，友盟统计，这几天公司要做自己的统计，于是乎也找了一些自动化埋点的博文学习使用。最后会给出参考链接，非常感谢。</p>
<h3 id="现有的几种埋点技术的实现原理和优劣分析"><a href="#现有的几种埋点技术的实现原理和优劣分析" class="headerlink" title="　　现有的几种埋点技术的实现原理和优劣分析"></a>　　现有的几种埋点技术的实现原理和优劣分析</h3><p>　<strong>1.代码埋点</strong>：将收集数据的代码直接写在需要的地方，当用户点击某个控件或者打开某个页面时调用到该部分代码完成数据的收集。<br>　    优势：准确性高，收集数据和发送数据都能精确控制，同时能方便的设置自定义属性，自定义控件，自定义View等。<br>　    劣势：埋点工作量大，更新代价大。<br>　<strong>2.可视化埋点</strong>：根据配置文件收集用户行为，从而获取数据进行分析。<br>　  优势：无须手动埋点，配置文件可动态更新。<br>　  劣势：配置文件的配置比较耗时，弹出框，隐藏控件等行为不能收集。收集的数据比较简单，只能收集用户行为，不能收集到与行为相关的具体数据。<br>　<strong>3.无埋点</strong>：与可视化埋点基本一致。不同点在于可视化埋点是根据配置文件收集数据，无埋点是预先收集所有的用户行为，然后根据　配置文件来提取数据。无埋点可以通过修改配置文件追溯之前的用户行为数据。<br>　<strong>4.后端埋点</strong>：Sensors Analytics 这个平台有解决方案，优点是能收集到详细的与行为相关的数据，适用于电商等大平台。比如用户选择了一件商品，点击了加入购物车，那么可以收集到用户信息，商品信息，商品价格，商品库存，卖家等诸多信息。  </p>
<h3 id="埋点技术的选择"><a href="#埋点技术的选择" class="headerlink" title="埋点技术的选择"></a>埋点技术的选择</h3><p>　<strong>1.代码埋点</strong>：既可以自己与后台定义接口，也可以使用第三方，常用的有友盟，百度统计等。<br>　<strong>2.可视化埋点和无埋点</strong>：移动端可以自己实现数据采集。第三方有诸葛IO，GrowingIO 。在知乎上查了关于这两个平台的信息，GrowingIO隐藏收费，官网并没有说到收费，但是使用15天后发邮件通知收费并停止数据采集和分析。诸葛IO免费模式的数据量是每月200万条，还有其他收费模式。<br>　<strong>3.后端埋点</strong>：Sensors Analytics  </p>
<h3 id="方案采用"><a href="#方案采用" class="headerlink" title="方案采用"></a>方案采用</h3><p>　根据公司的需求以及对app的规模，只需实现控件按钮点击事件的监听，但是对控件的点击事件处都添加代码，工作量是有点大，所以我们采用控件自动化埋点的方法来统计，只需在BaseActvity中重写dispatchTouchEvent，在xml布局中给需要统计点击事件的控件添加tag标签即可。  </p>
<h3 id="原理解析"><a href="#原理解析" class="headerlink" title="原理解析"></a>原理解析</h3><p><em>创建BaseActivity基类，实现控件的点击监听，根据UI布局的特性和Android点击事件传递机制实现。让创建的BaseActivity基类重写Activity的dispatchTouchEvent,当touch button时，获取到按下和抬起产生的MotionEvent对象，从而通过getRawX()和getRawY()方法获取到点击位置在界面中的坐标，然后搜索所有子view或者控件的布局区域示范包含点击位置，从而判断那个view或控件被点击了，再通过getTag()获取到我们控件的标签。</em></p>
<p> 在事件传递中，假设一个界面上有一个Button按钮，当我们touch down这个Button的时候，Down事件的传递如下：</p>
<pre><code class="Activity-&gt;dispatchTouchEvent">Button-&gt;dispatchTouchEvent  
Button-&gt;onTouch  
Button-&gt;onTouchEvent
</code></pre>
<p>   @Override<br>   public void onAttachedToWindow() {<br>        super.onAttachedToWindow();<br>        //获取到根节点的view<br>        rootView = getWindow().getDecorView();<br>        //控件在视图树上的根路径<br>        rootViewTree = getPackageName() + “.” + getClass().getSimpleName();<br>        //前缀名 bigData<br>        bigDataPrefix = getString(R.string.collection<em>tag);<br>        //前缀名 bigData</em><br>        bigDataIngorePrefix = getString(R.string.collection_ignore_tag);<br>        //前缀名 bigdata_ignore<br>        bigDataEventPrefix = getString(R.string.collection_event_prefix);<br>   }</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　想到应用统计，平时我们使用的一般都是第三方的，比如百度统计，友盟统计，这几天公司要做自己的统计，于是乎也找了一些自动化埋点的博文学习使用。最后会给出参考链接，非常感谢。&lt;/p&gt;
&lt;h3 id=&quot;现有的几种埋点技术的实现原理和优劣分析&quot;&gt;&lt;a href=&quot;#现有的几种埋点
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>5月份目标</title>
    <link href="http://yoursite.com/2017/05/08/5%E6%9C%88%E4%BB%BD%E7%9B%AE%E6%A0%87/"/>
    <id>http://yoursite.com/2017/05/08/5月份目标/</id>
    <published>2017-05-08T15:19:38.000Z</published>
    <updated>2017-05-08T16:30:55.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-hexo博客的更新优化-附上转载链接"><a href="#1-hexo博客的更新优化-附上转载链接" class="headerlink" title="1.hexo博客的更新优化(附上转载链接)"></a>1.hexo博客的更新优化(附上转载链接)</h4><h4 id="2-oc基本语法的学习-学习笔记记录"><a href="#2-oc基本语法的学习-学习笔记记录" class="headerlink" title="2.oc基本语法的学习(学习笔记记录)"></a>2.oc基本语法的学习(学习笔记记录)</h4><h4 id="3-android插件化与组件化的学习-附上demo"><a href="#3-android插件化与组件化的学习-附上demo" class="headerlink" title="3.android插件化与组件化的学习(附上demo)"></a>3.android插件化与组件化的学习(附上demo)</h4><h4 id="4-android无埋点数据收集-思路及实现"><a href="#4-android无埋点数据收集-思路及实现" class="headerlink" title="4.android无埋点数据收集(思路及实现)"></a>4.android无埋点数据收集(思路及实现)</h4><p>　　2017年过去近半了，感觉前几个月浑浑噩噩的过去了，收获的并不是很多，之前也在CSDN写过一些博客，但是  最后并没有坚持下来，一旦懒癌犯了，太可怕了。其实可以写的东西可以有很多，在公司做的项目经验，平时收藏的文章，摸爬滚打学习的新知识等等，今天用hexo和github搭了一个个人的网站，虽然还是很简陋，但是基本的功能已经实现了，之后还是会不断优化更新的，可以说真的很方便。这里推荐一篇教你如何搭建个人博客的文章（基于mac的），很详细，一步步来就能搭建成功了。<a href="http://www.jianshu.com/p/13e64c9e2295" target="_blank" rel="external">点我跳转</a><br>　　其实写博客的目的对我来说也很简单，就是监督自己，知道自己最近学了什么，做了什么，最近的状态如何，及时的调整找回状态。<br>　　公司的V3.0App在5月中旬就要项目启动了，到时候肯定会很忙，但是在忙的同时，肯定也会有所收获，将这些收获一并记录下来，（想想以前的一些东西，都忘记了），作为经验总结。</p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>　　markdown用的还不是很熟练。。还要看一下md语法怎么改格式，弄的漂亮一点。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-hexo博客的更新优化-附上转载链接&quot;&gt;&lt;a href=&quot;#1-hexo博客的更新优化-附上转载链接&quot; class=&quot;headerlink&quot; title=&quot;1.hexo博客的更新优化(附上转载链接)&quot;&gt;&lt;/a&gt;1.hexo博客的更新优化(附上转载链接)&lt;/h4
    
    </summary>
    
    
  </entry>
  
</feed>
